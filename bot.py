import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_CHAT = os.getenv("ADMIN_CHAT")  # ID –∞–¥–º–∏–Ω-—á–∞—Ç–∞
LOGO_PATH = os.getenv("LOGO_PATH", "logo.jpg")  # –ø—É—Ç—å –∫ –ª–æ–≥–æ—Ç–∏–ø—É

if not BOT_TOKEN:
    raise RuntimeError("BOT_TOKEN is not set!")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    text = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å—Ç—É–¥–∏—é –¥–µ—Ç–µ–π–ª–∏–Ω–≥–∞ *CLUSTER*!\n\n"
        "üöó –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:\n"
        "‚Äî –ü–æ–ª–∏—Ä–æ–≤–∫—É\n"
        "‚Äî –ñ–∏–¥–∫—É—é –∫–µ—Ä–∞–º–∏–∫—É\n"
        "‚Äî –•–∏–º—á–∏—Å—Ç–∫—É —Å–∞–ª–æ–Ω–∞\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å."
    )
    if os.path.exists(LOGO_PATH):
        await message.answer_photo(photo=open(LOGO_PATH, "rb"), caption=text, parse_mode="Markdown")
    else:
        await message.answer(text, parse_mode="Markdown")

# –í—Å–µ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è ‚Üí –≤ –∞–¥–º–∏–Ω-—á–∞—Ç
@dp.message()
async def forward_to_admin(message: types.Message):
    if ADMIN_CHAT:
        try:
            await bot.send_message(
                chat_id=ADMIN_CHAT,
                text=f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username or message.from_user.id}:\n{message.text}"
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç: {e}")

    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")

async def main():
    print("‚úÖ Bot started successfully")
    await dp.start_polling(bot)

if __name__ == "__main__":
    while True:
        try:
            asyncio.run(main())
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
            asyncio.run(asyncio.sleep(5))